jindo.DatePicker는 날짜 입력을 위한 컴포넌트이다. 
jindo.Calendar를 날짜 입력 도구로 사용하여 Text Input 컨트롤에 특정형식의 날짜를 입력할 수 있다.
DatePicker는 날짜를 선택하기 위한 달력 레이어와 입력된 날짜를 표시하는 Text Input 엘리먼트로 구성된다.
달력 레이어를 구성하기 위해 jindo.Calendar 컴포넌트를 사용하기 때문에 jindo.Calendar 컴포넌트에서 제공하는 기능과 커스텀 이벤트를 그대로 사용하여 달력 기능을 제어할 수 있다.
또한 달력 레이어의 노출시키는 구현은 jindo.LayerManager 컴포넌트를 사용하고 달력 레이어의 위치를 조정하는 구현은 jindo.LayerPosition 컴포넌트를 사용한다.
jindo.LayerPosition을 사용하여 달력 레이어를 포지셔닝 하기 위해선 초기화 옵션 중 bUseLayerPosition 속성(기본값 true)을 true로 설정해야 한다. bUseLayerPosition을 false로 설정하여 jindo.LayerPosition를 사용하지 않을 시 작성된 마크업, CSS 내용대로 달력 레이어가 노출된다.

#### jindo.DatePicker 컴포넌트 초기화 하기

jindo.DatePicker 생성 시 달력 레이어 엘리먼트와 초기화 옵션을 인자로 전달한다.
초기화 옵션 속성은 Calendar, LayerManager, LayerPosition, bUseLayerPosition이 있다.
Calendar, LayerManager, LayerPosition의 타입은 HashTable이다. 각각 jindo.Calendar, jindo.LayerManager, jindo.LayerPosition 컴포넌트를 초기화 하는 옵션을 설정한다. 해당 값을 설정하여 달력의 기능, 레이어 노출 방식, 레이어 노출 위치등을 제어할 수 있다. getCalendar(), getLayerManager(), getLayerPosition() 메서드를 통해 DatePicker에서 사용하는 컴포넌트 인자를 가져와 직접 제어하여 각 컴포넌트의 기능을 활용할 수도 있다. bUseLayerPosition는 jindo.LayerPosition을 사용하여 레이어를 포지셔닝 할지 여부를 설정한다.

아래 코드는 jindo.DatePicker 컴포넌트를 초기화 하는 예제이다.(아래 코드에 설정된 값은 디폴드 값이다)

	var oDatePicker = new jindo.DatePicker("calendar_layer", {
	    bUseLayerPosition : true, //LayerPosition을 사용해서 포지셔닝을 할지의 여부
	     
	    Calendar : { //Calendar를 위한 옵션
	        sClassPrefix : "calendar-", //Default Class Prefix
	        nYear : oDate.getFullYear(),
	        nMonth : oDate.getMonth() + 1,
	        nDate : oDate.getDate(),           
	        sTitleFormat : "yyyy-mm", //달력의 제목부분에 표시될 형식
	        aMonthTitle : ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"] //월 이름
	    },
	     
	    LayerManager : { //LayerManager를 위한 옵션
	        sCheckEvent : "click",
	        nShowDelay : 0,
	        nHideDelay : 0
	    },
	     
	    LayerPosition : { //LayerPosition을 위한 옵션
	        sPosition: "outside-bottom",
	        sAlign: "left",
	        nTop: 0,
	        nLeft: 0,
	        bAuto: false
	    }
	});

#### Date Picker 엘리먼트 연결하기

컴포넌트 초기화 후 addDatePickerSet 메서드를 호출하여 선택한 날짜가 표시될 Text Input 엘리먼트를 설정한다. addDatePickerSet 메서드는 달력을 띄우고 날짜를 표시하는 Date Picker 관련 설정을 HashTable을 통해서 인자로 받는다. 날짜가 표시되는 Text Input 엘리먼트 뿐만 아니라 Text Input 엘리먼트 이외에 달력을 보이게 할 엘리먼트를 함께 Date Picker로 설정할 수 있다. 또한 Text Input 엘리먼트에 기본 날짜값을 설정하고 날짜 선택 범위도 설정한다.

다음 코드를 통해 Date Picker 관련 설정 속성을 확인할 수 있다.

	oDatePicker.addDatePickerSet({
	    elInput : jindo.$("input"), //날짜가 입력될 input 엘리먼트
	    elButton : jindo.$("button"), //input외에도 달력을 보이게 할 엘리먼트
	    elLayerPosition : jindo.$("input"), //LayerPosition 컴포넌트로 자동으로 위치 조절시 기준이 되는 엘리먼트 (생략시 elInput이 디폴트)
	    htOption : {
	        nYear : 1983, //기본으로 설정될 연도
	        nMonth : 5, //기본으로 설정될 월
	        nDate : 12, //기본으로 설정될 일
	         
	        bDefaultSet : true, //true이면 기본 Input 값을 설정한다. false이면 설정하지 않는다.
	        bReadOnly : true, //true이면 input에 직접 값을 입력하지 못한다.
	        sDateFormat : "yyyy-mm-dd", //input에 입력될 날짜의 형식
	        htSelectableDateFrom : { //선택가능한 첫 날짜
	            nYear : 1900,
	            nMonth : 1,
	            nDate : 1              
	        },
	        htSelectableDateTo : { //선택가능한 마지막 날짜
	            nYear : 2100,
	            nMonth : 12,
	            nDate : 31
	        }
	    }
	});

#### Text Input 엘리먼트만 DatePicker로 설정하기

![](ex0.png "")

	var oDatePicker = new jindo.DatePicker(jindo.$("calendar_layer"), {
	    Calendar : {
	        sTitleFormat : "yyyy년 mm월"
	    }
	}).addDatePickerSet({
	    elInput : jindo.$("date_input"),
	    htOption : {
	        bDefaultSet : false,
	        sDateFormat : "yyyy-mm-dd"
	    }
	});

#### Text Input 엘리먼트와 함께 버튼을 Date Picker로 설정하기

![](ex1.png "")

	oDatePicker.addDatePickerSet({
	    elInput : jindo.$("date_input"),
	    elButton : jindo.$("btn_from"),
	    htOption : {
	        bDefaultSet : false,
	        sDateFormat : "yyyy-mm-dd"
	    }
	});

#### Date Picker Set을 여러개 설정하기

![](ex2.png "")

	oDatePicker.addDatePickerSet({
	    elInput : jindo.$("date_input"),
	    elButton : jindo.$("btn_from"),
	    htOption : {
	        bDefaultSet : false,
	        sDateFormat : "yyyy-mm-dd"
	    }
	}).addDatePickerSet({
	    elInput : jindo.$("date_input2"),
	    elButton : jindo.$("btn_from2"),
	    htOption : {
	        bDefaultSet : false,
	        sDateFormat : "yyyy-mm-dd"
	});

#### 커스텀이벤트 활용하여 날짜 선택 제어하기

달력 레이어를 통해 날짜 선택 시 선택 되기 전 시점에 beforeSelect 이벤트가 발생한다. beforeSelect 이벤트 핸들러를 활용하여 선택 날짜의 유효성을 체크할 수 있다.

다음은 beforeSelect 이벤트를 활용하여 짝수날만 선택할 수 있도록 하는 예제다.

	var oDatePicker = new jindo.DatePicker("calendar_layer").addDatePickerSet({
	    elInput : jindo.$("date_input"),
	    elButton : jindo.$("btn_from"),
	    htOption : {
	        sDateFormat : "yyyy-mm-dd"
	    }
	}).attach({
	    beforeSelect : function(oCustomEvent) {
	        if (oCustomEvent.nDate % 2 != 0) {
	            alert("짝수 날만 선택할 수 있습니다.");
	            oCustomEvent.stop();
	        }
	    }
	});